/**
 * Created by T-Vick on 2018/12/6.
 */

// 游戏业务相关请求报文

// 1. 游戏开始消息（客户端监听）

let 游戏开始 = {
    事件名: 'gameBegin',
    参数: {
        ante: 5000,
        uids: [],
        dice: [1, 6] // 色子
    }
};

// 2. 游戏状态推送（客户端监听）
let 游戏状态 = {
    事件名: 'gameStatus',
    参数: {
        status: 0 // 0游戏开始，1 等待第一轮下注 2 等待第二轮下注 3 等待亮牌 4 游戏结束
    }
};

// 3. 托管消息（客户端监听）
let 托管 = {
    事件名: 'tuoGuang',
    参数: [888888, true] // 888888为uid
};

// 4. 打底通知（客户端监听）
let 打底 = {
    事件名: 'bet',
    参数: {
        888888: 5000,
        666666: 5000
    }
};

// 5. 第一张手牌消息（客户端监听）
let 第一张 = {
    事件名: 'holds1',
    参数: {
        888888: [5],
        666666: [0]
    }
};

// 6. 背牌消息（客户端监听）
let 背牌 = {
    事件名: 'deal',
    参数: 1 // 1 或 2
};

// 7. 下注列表通知（客户端监听）
let 下注列表 = {
    事件名: 'betList',
    参数: [5000]
};


// 8. 下注（服务端监听）
let 下注 = {
    事件名: 'bet',
    参数: 5000
};

// 9. 下注结果通知（客户端监听）
let 下注结果 = {
    事件名: 'xiazhu',
    参数: {
        uid: 888888,
        bet: 5000, // 下注总数
        currbet: 5000 // 本次下注金币数
    }
};

// 10. 发第二张牌消息（客户端监听）
let 第二张牌 = {
    事件名: 'holds2',
    参数: {
        888888: [2, 8], // 自己的全部手牌,
        666666: [3, 0] // 别人的第一张牌
    }
};



// 12. 放弃（服务端监听）
let 放弃 = {
    事件名: 'giveup',
};

// 13. 放弃结果通知（客户端监听）
let 放弃 = {
    事件名: 'giveup',
    参数: {
        uid: 888888
    }
};

// 14. 比牌 (客户端监听)
let 比牌 = {
    事件名: 'bipai',
    参数: [
        {
            uid: 888888,
            holds: [],
            type: 3,
            isGiveUp: true
        },
        {
            uid: 666666,
            holds: [],
            type: 4,
            isGiveUp: false
        }
    ]
};


// 17. 断线重连（客户端监听）
let 断线重连 = {
    事件名称: 'gameInfo',
    参数: {
        zuid: this.zuid, //
        status: this.status, // 游戏状态
        surplusTime: 20000, // 当前状态剩余操作事件(单位：毫秒)
        uids: this.uids, // 所有参与游戏的玩家uid
        bets: [], // 下注列表
        players: {
            123456: { // 断线重连获取到自己的信息
                isTrusteeship: false, // 托管状态

                holds: [2, 8], // 看过牌才给手牌

                holdsValue: {
                    type: 5,
                    mul: 3
                }, // 牌型

                rob: 3, // 抢庄倍数

                bet: 10000, // 下注总额

                bet1: 5000, // 第一轮下注数目

                bet2: 5000, // 第二轮下注数目

                bets: [5000, 10000], // 下注列表
            },
            45678: { // 断线重连获取到其他玩家的信息
                isTrusteeship: false,

                holds: [0],

                holdsValue: {
                    type: 5,
                    mul: 3
                },

                rob: 3,

                bet: 10000
            }
        }
    }
};

// 18. 游戏结算

let 游戏结果 = {
    事件名: 'gameResult',
    参数: {
        allScores: {
            888888: 10000, // 输赢分
            666666: -10000
        },
        allHolds: {
            888888: {
                holds: [2, 8], // 手牌
                holdsValue: {
                    type: 5,
                    mul: 3
                }, // 牌型
            },
            666666: {
                holds: [3,7],
                holdsValue: {
                    type: 5,
                    mul: 3
                }
            }
        }
    }
};




