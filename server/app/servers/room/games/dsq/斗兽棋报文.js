/**
 * Created by T-Vick on 2018/12/6.
 */

// 游戏业务相关请求报文

    //1.游戏开始
let 游戏开始 = {
        事件名: 'gameBegin',
        参数: {
            uids: [],   //游戏玩家id数组
            types: [{uid: 0}, {uid: 1}] //0 红方 卡牌的值为1-8 1为蓝方 卡牌的值为11-18
        }
    };

// 2.轮转（客户端监听）
let 轮转 = {
    事件名: 'turn',
    参数: {
        uid: 888886,
    }
};

// 3.翻牌（服务端监听）
let 翻牌 = {
    事件名称: 'fanpai',
    参数: [1, 2] // 数组 棋盘上行、列的索引
};

// 4.翻牌成功（客户端监听）
let 翻牌成功 = {
    事件名称: 'fanpai',
    参数: {id:4, index: 5}  //翻出来的值  在一维数组中的索引
};

// 5.移动牌（服务端监听）
let 移动牌 = {
    事件名称: 'move',
    参数: {
        from: [],   // 起点:数组  棋盘上行、列的索引
        to:[]       // 终点:数组  棋盘上行、列的索引
    }
};

// 6.移动牌成功（客户端监听）
let 移动牌成功 = {
    事件名称: 'movesuc',
    参数: {
        from: [],   // 起点:数组  棋盘上行、列的索引
        to:[],      // 终点:数组  棋盘上行、列的索引
        fromIndex: 1,
        toIndex: 1,
    }
};

// 6.游戏结果（客户端监听）
let 游戏结果 = {
    事件名称: 'gameResult',
    参数: {uid1: 1000, uid2: -1000}   //实际输赢分数
};


// 7. 断线重连（客户端监听）
let 断线重连 = {
    事件名称: 'gameInfo',
    参数: {
        turn: 545454, //轮到谁的玩家id
        auto: 30000-(Date.now()-24000), //剩下的操作时间
        uids: [],    //玩家id数组
        chess: [[], [], [], []],//棋盘数据
        types: [{uid: 0}, {uid: 1}] //0 红方 卡牌的值为1-8 1为蓝方 卡牌的值为11-18
    }
};

// 8.认输（服务端监听）
let 认输 = {
    事件名称: 'lose'
};



