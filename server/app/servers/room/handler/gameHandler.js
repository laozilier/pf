/** * Created by apple on 2017/9/18. */let roomPool = require('../room/RoomPool');let Handler = function (app) {    this.app = app;    this.channelService = app.get('channelService');};let handler = Handler.prototype;// handler.getRoomInfo = function (param, session, next) {//     let rid = param.rid; //房间号//     let sign = param.sign; //密钥//     let room  = roomPool.getRoom(rid);//     let msg = {};//     if(room){//         room.seats.forEach(function (el) {//             if(room.gameScript && el){//                 let player = room.gameScript.player(el.uid);//                 if(player){//                     msg[el.uid] = {//                         pic:el.pic,//                         name:el.name,//                         size: player.holdsValue.type,//                         pai: player.holdsValue.pai,//                     };//                 }//             }//         })//     }//     next(null, msg);// };/** * 发送消息给指定玩家,房间层 * @param msg * @param session * @param next * @returns {*} */handler.z = function (msg, session, next) {    let uid = session.uid;    let rid = session.get('rid');    let event = msg.e;    let data = msg.d;    APP_LOG.log("房间层： event:" + event + " data:", data || '');    if (!rid || !uid) {        APP_LOG.warn(rid, uid, "rid 和 uid 都为空，消息无法接收");        return next(null, {code: STATE_CODE.notBindSession});    }    let room = roomPool.getRoom(rid);    if (room) { //消息发送给玩家        let play = room.player(uid);        if (play) {            play.emit(event, data);        } else {            APP_LOG.info("没有找到玩家 uid = " + uid);        }    } else {        APP_LOG.warn("没有找到房间 rid = " + rid);        return next(null, {code: STATE_CODE.roomNotExists});    }    next(null);};/** * 发送消息给指定玩家,游戏层 * @param msg * @param session * @param next * @returns {*} */handler.s = function (msg, session, next) {    let uid = session.uid;    let rid = session.get('rid');    let event = msg.e;    let data = msg.d;    if (!rid || !uid) {        APP_LOG.warn(rid, uid, "rid 和 uid 都为空，消息无法接收");        return next(null, {code: STATE_CODE.notBindSession});    }    let room = roomPool.getRoom(rid);    if (room) { //消息发送给玩家        let play = room.gamePlayer(uid);        if (play) {            play.emit(event, data);        } else {            APP_LOG.info("没有找到游戏玩家 uid = " + uid);        }    } else {        APP_LOG.warn("没有找到房间 rid = " + rid);        return next(null, {code: STATE_CODE.roomNotExists});    }    next(null);};module.exports = function (app) {    return new Handler(app);};